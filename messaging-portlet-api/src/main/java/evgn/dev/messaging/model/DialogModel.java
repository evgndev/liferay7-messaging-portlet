/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package evgn.dev.messaging.model;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.model.BaseModel;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.service.ServiceContext;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the Dialog service. Represents a row in the &quot;dmsg_Dialog&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link evgn.dev.messaging.model.impl.DialogModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link evgn.dev.messaging.model.impl.DialogImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see Dialog
 * @see evgn.dev.messaging.model.impl.DialogImpl
 * @see evgn.dev.messaging.model.impl.DialogModelImpl
 * @generated
 */
@ProviderType
public interface DialogModel extends BaseModel<Dialog> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a dialog model instance should use the {@link Dialog} interface instead.
	 */

	/**
	 * Returns the primary key of this dialog.
	 *
	 * @return the primary key of this dialog
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this dialog.
	 *
	 * @param primaryKey the primary key of this dialog
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the dialog ID of this dialog.
	 *
	 * @return the dialog ID of this dialog
	 */
	public long getDialogId();

	/**
	 * Sets the dialog ID of this dialog.
	 *
	 * @param dialogId the dialog ID of this dialog
	 */
	public void setDialogId(long dialogId);

	/**
	 * Returns the topic of this dialog.
	 *
	 * @return the topic of this dialog
	 */
	@AutoEscape
	public String getTopic();

	/**
	 * Sets the topic of this dialog.
	 *
	 * @param topic the topic of this dialog
	 */
	public void setTopic(String topic);

	/**
	 * Returns the creator member ID of this dialog.
	 *
	 * @return the creator member ID of this dialog
	 */
	public long getCreatorMemberId();

	/**
	 * Sets the creator member ID of this dialog.
	 *
	 * @param creatorMemberId the creator member ID of this dialog
	 */
	public void setCreatorMemberId(long creatorMemberId);

	/**
	 * Returns the last message date of this dialog.
	 *
	 * @return the last message date of this dialog
	 */
	public Date getLastMessageDate();

	/**
	 * Sets the last message date of this dialog.
	 *
	 * @param lastMessageDate the last message date of this dialog
	 */
	public void setLastMessageDate(Date lastMessageDate);

	/**
	 * Returns the last message ID of this dialog.
	 *
	 * @return the last message ID of this dialog
	 */
	public long getLastMessageId();

	/**
	 * Sets the last message ID of this dialog.
	 *
	 * @param lastMessageId the last message ID of this dialog
	 */
	public void setLastMessageId(long lastMessageId);

	/**
	 * Returns the disable answering of this dialog.
	 *
	 * @return the disable answering of this dialog
	 */
	public boolean getDisableAnswering();

	/**
	 * Returns <code>true</code> if this dialog is disable answering.
	 *
	 * @return <code>true</code> if this dialog is disable answering; <code>false</code> otherwise
	 */
	public boolean isDisableAnswering();

	/**
	 * Sets whether this dialog is disable answering.
	 *
	 * @param disableAnswering the disable answering of this dialog
	 */
	public void setDisableAnswering(boolean disableAnswering);

	/**
	 * Returns the create date of this dialog.
	 *
	 * @return the create date of this dialog
	 */
	public Date getCreateDate();

	/**
	 * Sets the create date of this dialog.
	 *
	 * @param createDate the create date of this dialog
	 */
	public void setCreateDate(Date createDate);

	/**
	 * Returns the creator user ID of this dialog.
	 *
	 * @return the creator user ID of this dialog
	 */
	public long getCreatorUserId();

	/**
	 * Sets the creator user ID of this dialog.
	 *
	 * @param creatorUserId the creator user ID of this dialog
	 */
	public void setCreatorUserId(long creatorUserId);

	/**
	 * Returns the creator user uuid of this dialog.
	 *
	 * @return the creator user uuid of this dialog
	 */
	public String getCreatorUserUuid();

	/**
	 * Sets the creator user uuid of this dialog.
	 *
	 * @param creatorUserUuid the creator user uuid of this dialog
	 */
	public void setCreatorUserUuid(String creatorUserUuid);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(evgn.dev.messaging.model.Dialog dialog);

	@Override
	public int hashCode();

	@Override
	public CacheModel<evgn.dev.messaging.model.Dialog> toCacheModel();

	@Override
	public evgn.dev.messaging.model.Dialog toEscapedModel();

	@Override
	public evgn.dev.messaging.model.Dialog toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}